@use './variables';

//@todo: Use colors from theme.json where possible

/* Blocks (move to separate stylesheet) --------*/

.wp-block-list.is-style-horizontal {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin: 0;
    padding: 0;

    li {
        margin: 0 1rem 1rem 0;

        &:last-child {
            margin-right: 0;
        }
    }
}


.is-style-button-fill {
        a {
            border: 1px solid;
        border: none;
        border-radius: 3px;
        background: variables.$color__background-button;
        font-weight: bold;
        text-transform: uppercase;
        text-decoration: none;
        letter-spacing: 1px;
        color: variables.$color__text-secondary;
        line-height: 1;
        padding: 0.6em 1em;
        
        &:hover, &:active, &:focus {
            transition: all .3s ease-in-out;
            background: variables.$color__border-button-hover;
            box-shadow: 1px 2px 20px variables.$color__background-button;
        }
        }
    }

.is-style-button-outline {
       a {
        border: 1px solid variables.$color__background-button;
        border-radius: 3px;
        background: transparent;
        font-weight: bold;
        text-transform: uppercase;
        text-decoration: none;
        letter-spacing: 1px;
        color: variables.$color__background-button;
        line-height: 1;
        padding: 0.6em 1em;
        
        &:hover, &:active, &:focus {
            transition: all .3s ease-in-out;
            background: variables.$color__background-button;
            color: variables.$color__text-secondary;
        }
       }
    }

.is-style-arrow {
        position: relative;
        
        a {
            position: relative;
            padding-right: 1.5em;
            text-decoration: none;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            
            &::after {
                content: "â†’";
                position: absolute;
                right: 0;
                transition: transform 0.3s ease-in-out;
            }
            
            &:hover::after {
                transform: translateX(0.3em);
            }
        }
    }
